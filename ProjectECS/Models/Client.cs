//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectECS.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations; 
    using System.Linq;

    public class ValidateCredentialsAttribute : ValidationAttribute
    {
        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
            var client = (Client)validationContext.ObjectInstance;

            // Check if the email and password are provided
            if (!string.IsNullOrEmpty(client.ClientEmail) && !string.IsNullOrEmpty(client.ClientPwd))
            {
                // Add your database validation logic here
                // Replace 'YourDbContext' with your actual database context
                using (var db = new ECSWebEntities())
                {
                    var login = db.Clients.FirstOrDefault(c => c.ClientEmail == client.ClientEmail);

                    if (login != null)
                    {
                        if (login.ClientPwd == client.ClientPwd)
                        {
                            return ValidationResult.Success;
                        }
                    }
                }

                return new ValidationResult("Invalid email or password. Please try again.");
            }

            return ValidationResult.Success; // No error message if both fields are empty
        }
    }






    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.ClientProducts = new HashSet<ClientProduct>();
            this.PreferredServices = new HashSet<PreferredService>();
        }

        public int ClientID { get; set; }
         
        [Required]
        public string ClientName { get; set; } 
         
        [Required]
        [EmailAddress]
        public string ClientEmail { get; set; } 
         
        [Required]
        public string ClientPwd { get; set; }
        public int ClientStatus { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientProduct> ClientProducts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PreferredService> PreferredServices { get; set; }
    }
}
